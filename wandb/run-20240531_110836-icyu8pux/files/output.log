brain tumor dataset dang su dung
Dataset ImageFolder
    Number of datapoints: 5712
    Root location: D:/Comvis 2024/FedNH/data/braintumor/Training
    StandardTransform
Transform: Compose(
               RandomHorizontalFlip(p=0.5)
               RandomVerticalFlip(p=0.5)
               RandomRotation(degrees=[-10.0, 10.0], interpolation=nearest, expand=False, fill=0)
               Resize(size=(224, 224), interpolation=bilinear, max_size=None, antialias=None)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
Dataset ImageFolder
    Number of datapoints: 1311
    Root location: D:/Comvis 2024/FedNH/data/braintumor/Testing
    StandardTransform
Transform: Compose(
               Resize(size=(224, 224), interpolation=bilinear, max_size=None, antialias=None)
               ToTensor()
               Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225])
           )
 [Info - Dirichlet Sampling]: At leaset one client only has one class label. Perform Resampling...
 [Info - Dirichlet Sampling]: At leaset one client only has one class label. Perform Resampling...
 [Info - Dirichlet Sampling]: At leaset one client only has one class label. Perform Resampling...
 Warning: 13 clients have less than 2 classes
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
tumorModelNH
============================================================Run Summary============================================================
Dataset:
 dataset:braintumor | num_classes:4 | partition:noniid-label-distribution | beta:0.3
Server Info:
 strategy:FedNH | num_clients:100 | num_rounds: 200 | participate_ratio:0.1 | drop_ratio:0.0
Clients Info:
 model:tumorModel | num_epochs:5 | batch_size:32 | optimizer:SGD | inint lr:0.01 | lr scheduler:diminishing | momentum: 0.9 | weight decay: 1e-05
 tumorModel: size:11.553 MB | num params: 2.888 M
FedUHServer: the following layers will not be updated: ['prototype']
Strategy Related Hyper-parameters:
 server side
  FedNH_smoothing _ 0.9
  FedNH_server_adv_prototype_agg _ False
 client side
  FedNH_return_embedding _ False
  FedNH_head_init _ orthogonal
  FedNH_client_adv_prototype_agg _ False
  FedNH_fix_scaling _ False
Round:1 - Active clients:[80 84 33 81 93 17 36 82 69 65]:
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([13, 3, 224, 224])
After Conv1 and BN1: torch.Size([13, 32, 221, 221])
After Pool1: torch.Size([13, 32, 73, 73])
After Conv2 and BN2: torch.Size([13, 64, 70, 70])
After Pool2: torch.Size([13, 64, 23, 23])
After Conv3 and BN3: torch.Size([13, 128, 20, 20])
After Pool2_2: torch.Size([13, 128, 9, 9])
After Conv4 and BN4: torch.Size([13, 128, 6, 6])
After Flatten: torch.Size([13, 4608])
After FC1: torch.Size([13, 512])
After Linear2: torch.Size([13, 192])
After Normalizing feature embedding: torch.Size([13, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([13, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([13, 3, 224, 224])
After Conv1 and BN1: torch.Size([13, 32, 221, 221])
After Pool1: torch.Size([13, 32, 73, 73])
After Conv2 and BN2: torch.Size([13, 64, 70, 70])
After Pool2: torch.Size([13, 64, 23, 23])
After Conv3 and BN3: torch.Size([13, 128, 20, 20])
After Pool2_2: torch.Size([13, 128, 9, 9])
After Conv4 and BN4: torch.Size([13, 128, 6, 6])
After Flatten: torch.Size([13, 4608])
After FC1: torch.Size([13, 512])
After Linear2: torch.Size([13, 192])
After Normalizing feature embedding: torch.Size([13, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([13, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([13, 3, 224, 224])
After Conv1 and BN1: torch.Size([13, 32, 221, 221])
After Pool1: torch.Size([13, 32, 73, 73])
After Conv2 and BN2: torch.Size([13, 64, 70, 70])
After Pool2: torch.Size([13, 64, 23, 23])
After Conv3 and BN3: torch.Size([13, 128, 20, 20])
After Pool2_2: torch.Size([13, 128, 9, 9])
After Conv4 and BN4: torch.Size([13, 128, 6, 6])
After Flatten: torch.Size([13, 4608])
After FC1: torch.Size([13, 512])
After Linear2: torch.Size([13, 192])
After Normalizing feature embedding: torch.Size([13, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([13, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([13, 3, 224, 224])
After Conv1 and BN1: torch.Size([13, 32, 221, 221])
After Pool1: torch.Size([13, 32, 73, 73])
After Conv2 and BN2: torch.Size([13, 64, 70, 70])
After Pool2: torch.Size([13, 64, 23, 23])
After Conv3 and BN3: torch.Size([13, 128, 20, 20])
After Pool2_2: torch.Size([13, 128, 9, 9])
After Conv4 and BN4: torch.Size([13, 128, 6, 6])
After Flatten: torch.Size([13, 4608])
After FC1: torch.Size([13, 512])
After Linear2: torch.Size([13, 192])
After Normalizing feature embedding: torch.Size([13, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([13, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([13, 3, 224, 224])
After Conv1 and BN1: torch.Size([13, 32, 221, 221])
After Pool1: torch.Size([13, 32, 73, 73])
After Conv2 and BN2: torch.Size([13, 64, 70, 70])
After Pool2: torch.Size([13, 64, 23, 23])
After Conv3 and BN3: torch.Size([13, 128, 20, 20])
After Pool2_2: torch.Size([13, 128, 9, 9])
After Conv4 and BN4: torch.Size([13, 128, 6, 6])
After Flatten: torch.Size([13, 4608])
After FC1: torch.Size([13, 512])
After Linear2: torch.Size([13, 192])
After Normalizing feature embedding: torch.Size([13, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([13, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([13, 3, 224, 224])
After Conv1 and BN1: torch.Size([13, 32, 221, 221])
After Pool1: torch.Size([13, 32, 73, 73])
After Conv2 and BN2: torch.Size([13, 64, 70, 70])
After Pool2: torch.Size([13, 64, 23, 23])
After Conv3 and BN3: torch.Size([13, 128, 20, 20])
After Pool2_2: torch.Size([13, 128, 9, 9])
After Conv4 and BN4: torch.Size([13, 128, 6, 6])
After Flatten: torch.Size([13, 4608])
After FC1: torch.Size([13, 512])
After Linear2: torch.Size([13, 192])
After Normalizing feature embedding: torch.Size([13, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([13, 4])
Input size: torch.Size([6, 3, 224, 224])
After Conv1 and BN1: torch.Size([6, 32, 221, 221])
After Pool1: torch.Size([6, 32, 73, 73])
After Conv2 and BN2: torch.Size([6, 64, 70, 70])
After Pool2: torch.Size([6, 64, 23, 23])
After Conv3 and BN3: torch.Size([6, 128, 20, 20])
After Pool2_2: torch.Size([6, 128, 9, 9])
After Conv4 and BN4: torch.Size([6, 128, 6, 6])
After Flatten: torch.Size([6, 4608])
After FC1: torch.Size([6, 512])
After Linear2: torch.Size([6, 192])
After Normalizing feature embedding: torch.Size([6, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([6, 4])
Input size: torch.Size([6, 3, 224, 224])
After Conv1 and BN1: torch.Size([6, 32, 221, 221])
After Pool1: torch.Size([6, 32, 73, 73])
After Conv2 and BN2: torch.Size([6, 64, 70, 70])
After Pool2: torch.Size([6, 64, 23, 23])
After Conv3 and BN3: torch.Size([6, 128, 20, 20])
After Pool2_2: torch.Size([6, 128, 9, 9])
After Conv4 and BN4: torch.Size([6, 128, 6, 6])
After Flatten: torch.Size([6, 4608])
After FC1: torch.Size([6, 512])
After Linear2: torch.Size([6, 192])
After Normalizing feature embedding: torch.Size([6, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([6, 4])
Input size: torch.Size([6, 3, 224, 224])
After Conv1 and BN1: torch.Size([6, 32, 221, 221])
After Pool1: torch.Size([6, 32, 73, 73])
After Conv2 and BN2: torch.Size([6, 64, 70, 70])
After Pool2: torch.Size([6, 64, 23, 23])
After Conv3 and BN3: torch.Size([6, 128, 20, 20])
After Pool2_2: torch.Size([6, 128, 9, 9])
After Conv4 and BN4: torch.Size([6, 128, 6, 6])
After Flatten: torch.Size([6, 4608])
After FC1: torch.Size([6, 512])
After Linear2: torch.Size([6, 192])
After Normalizing feature embedding: torch.Size([6, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([6, 4])
Input size: torch.Size([6, 3, 224, 224])
After Conv1 and BN1: torch.Size([6, 32, 221, 221])
After Pool1: torch.Size([6, 32, 73, 73])
After Conv2 and BN2: torch.Size([6, 64, 70, 70])
After Pool2: torch.Size([6, 64, 23, 23])
After Conv3 and BN3: torch.Size([6, 128, 20, 20])
After Pool2_2: torch.Size([6, 128, 9, 9])
After Conv4 and BN4: torch.Size([6, 128, 6, 6])
After Flatten: torch.Size([6, 4608])
After FC1: torch.Size([6, 512])
After Linear2: torch.Size([6, 192])
After Normalizing feature embedding: torch.Size([6, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([6, 4])
Input size: torch.Size([6, 3, 224, 224])
After Conv1 and BN1: torch.Size([6, 32, 221, 221])
After Pool1: torch.Size([6, 32, 73, 73])
After Conv2 and BN2: torch.Size([6, 64, 70, 70])
After Pool2: torch.Size([6, 64, 23, 23])
After Conv3 and BN3: torch.Size([6, 128, 20, 20])
After Pool2_2: torch.Size([6, 128, 9, 9])
After Conv4 and BN4: torch.Size([6, 128, 6, 6])
After Flatten: torch.Size([6, 4608])
After FC1: torch.Size([6, 512])
After Linear2: torch.Size([6, 192])
After Normalizing feature embedding: torch.Size([6, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([6, 4])
Input size: torch.Size([6, 3, 224, 224])
After Conv1 and BN1: torch.Size([6, 32, 221, 221])
After Pool1: torch.Size([6, 32, 73, 73])
After Conv2 and BN2: torch.Size([6, 64, 70, 70])
After Pool2: torch.Size([6, 64, 23, 23])
After Conv3 and BN3: torch.Size([6, 128, 20, 20])
After Pool2_2: torch.Size([6, 128, 9, 9])
After Conv4 and BN4: torch.Size([6, 128, 6, 6])
After Flatten: torch.Size([6, 4608])
After FC1: torch.Size([6, 512])
After Linear2: torch.Size([6, 192])
After Normalizing feature embedding: torch.Size([6, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([6, 4])
Input size: torch.Size([1, 3, 224, 224])
After Conv1 and BN1: torch.Size([1, 32, 221, 221])
After Pool1: torch.Size([1, 32, 73, 73])
After Conv2 and BN2: torch.Size([1, 64, 70, 70])
After Pool2: torch.Size([1, 64, 23, 23])
After Conv3 and BN3: torch.Size([1, 128, 20, 20])
After Pool2_2: torch.Size([1, 128, 9, 9])
After Conv4 and BN4: torch.Size([1, 128, 6, 6])
After Flatten: torch.Size([1, 4608])
After FC1: torch.Size([1, 512])
After Linear2: torch.Size([1, 192])
After Normalizing feature embedding: torch.Size([1, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([1, 4])
Input size: torch.Size([1, 3, 224, 224])
After Conv1 and BN1: torch.Size([1, 32, 221, 221])
After Pool1: torch.Size([1, 32, 73, 73])
After Conv2 and BN2: torch.Size([1, 64, 70, 70])
After Pool2: torch.Size([1, 64, 23, 23])
After Conv3 and BN3: torch.Size([1, 128, 20, 20])
After Pool2_2: torch.Size([1, 128, 9, 9])
After Conv4 and BN4: torch.Size([1, 128, 6, 6])
After Flatten: torch.Size([1, 4608])
After FC1: torch.Size([1, 512])
After Linear2: torch.Size([1, 192])
After Normalizing feature embedding: torch.Size([1, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([1, 4])
Input size: torch.Size([1, 3, 224, 224])
After Conv1 and BN1: torch.Size([1, 32, 221, 221])
After Pool1: torch.Size([1, 32, 73, 73])
After Conv2 and BN2: torch.Size([1, 64, 70, 70])
After Pool2: torch.Size([1, 64, 23, 23])
After Conv3 and BN3: torch.Size([1, 128, 20, 20])
After Pool2_2: torch.Size([1, 128, 9, 9])
After Conv4 and BN4: torch.Size([1, 128, 6, 6])
After Flatten: torch.Size([1, 4608])
After FC1: torch.Size([1, 512])
After Linear2: torch.Size([1, 192])
After Normalizing feature embedding: torch.Size([1, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([1, 4])
Input size: torch.Size([1, 3, 224, 224])
After Conv1 and BN1: torch.Size([1, 32, 221, 221])
After Pool1: torch.Size([1, 32, 73, 73])
After Conv2 and BN2: torch.Size([1, 64, 70, 70])
After Pool2: torch.Size([1, 64, 23, 23])
After Conv3 and BN3: torch.Size([1, 128, 20, 20])
After Pool2_2: torch.Size([1, 128, 9, 9])
After Conv4 and BN4: torch.Size([1, 128, 6, 6])
After Flatten: torch.Size([1, 4608])
After FC1: torch.Size([1, 512])
After Linear2: torch.Size([1, 192])
After Normalizing feature embedding: torch.Size([1, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([1, 4])
Input size: torch.Size([1, 3, 224, 224])
After Conv1 and BN1: torch.Size([1, 32, 221, 221])
After Pool1: torch.Size([1, 32, 73, 73])
After Conv2 and BN2: torch.Size([1, 64, 70, 70])
After Pool2: torch.Size([1, 64, 23, 23])
After Conv3 and BN3: torch.Size([1, 128, 20, 20])
After Pool2_2: torch.Size([1, 128, 9, 9])
After Conv4 and BN4: torch.Size([1, 128, 6, 6])
After Flatten: torch.Size([1, 4608])
After FC1: torch.Size([1, 512])
After Linear2: torch.Size([1, 192])
After Normalizing feature embedding: torch.Size([1, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([1, 4])
Input size: torch.Size([1, 3, 224, 224])
After Conv1 and BN1: torch.Size([1, 32, 221, 221])
After Pool1: torch.Size([1, 32, 73, 73])
After Conv2 and BN2: torch.Size([1, 64, 70, 70])
After Pool2: torch.Size([1, 64, 23, 23])
After Conv3 and BN3: torch.Size([1, 128, 20, 20])
After Pool2_2: torch.Size([1, 128, 9, 9])
After Conv4 and BN4: torch.Size([1, 128, 6, 6])
After Flatten: torch.Size([1, 4608])
After FC1: torch.Size([1, 512])
After Linear2: torch.Size([1, 192])
After Normalizing feature embedding: torch.Size([1, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([1, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([11, 3, 224, 224])
After Conv1 and BN1: torch.Size([11, 32, 221, 221])
After Pool1: torch.Size([11, 32, 73, 73])
After Conv2 and BN2: torch.Size([11, 64, 70, 70])
After Pool2: torch.Size([11, 64, 23, 23])
After Conv3 and BN3: torch.Size([11, 128, 20, 20])
After Pool2_2: torch.Size([11, 128, 9, 9])
After Conv4 and BN4: torch.Size([11, 128, 6, 6])
After Flatten: torch.Size([11, 4608])
After FC1: torch.Size([11, 512])
After Linear2: torch.Size([11, 192])
After Normalizing feature embedding: torch.Size([11, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([11, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([11, 3, 224, 224])
After Conv1 and BN1: torch.Size([11, 32, 221, 221])
After Pool1: torch.Size([11, 32, 73, 73])
After Conv2 and BN2: torch.Size([11, 64, 70, 70])
After Pool2: torch.Size([11, 64, 23, 23])
After Conv3 and BN3: torch.Size([11, 128, 20, 20])
After Pool2_2: torch.Size([11, 128, 9, 9])
After Conv4 and BN4: torch.Size([11, 128, 6, 6])
After Flatten: torch.Size([11, 4608])
After FC1: torch.Size([11, 512])
After Linear2: torch.Size([11, 192])
After Normalizing feature embedding: torch.Size([11, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([11, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([11, 3, 224, 224])
After Conv1 and BN1: torch.Size([11, 32, 221, 221])
After Pool1: torch.Size([11, 32, 73, 73])
After Conv2 and BN2: torch.Size([11, 64, 70, 70])
After Pool2: torch.Size([11, 64, 23, 23])
After Conv3 and BN3: torch.Size([11, 128, 20, 20])
After Pool2_2: torch.Size([11, 128, 9, 9])
After Conv4 and BN4: torch.Size([11, 128, 6, 6])
After Flatten: torch.Size([11, 4608])
After FC1: torch.Size([11, 512])
After Linear2: torch.Size([11, 192])
After Normalizing feature embedding: torch.Size([11, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([11, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([11, 3, 224, 224])
After Conv1 and BN1: torch.Size([11, 32, 221, 221])
After Pool1: torch.Size([11, 32, 73, 73])
After Conv2 and BN2: torch.Size([11, 64, 70, 70])
After Pool2: torch.Size([11, 64, 23, 23])
After Conv3 and BN3: torch.Size([11, 128, 20, 20])
After Pool2_2: torch.Size([11, 128, 9, 9])
After Conv4 and BN4: torch.Size([11, 128, 6, 6])
After Flatten: torch.Size([11, 4608])
After FC1: torch.Size([11, 512])
After Linear2: torch.Size([11, 192])
After Normalizing feature embedding: torch.Size([11, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([11, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([11, 3, 224, 224])
After Conv1 and BN1: torch.Size([11, 32, 221, 221])
After Pool1: torch.Size([11, 32, 73, 73])
After Conv2 and BN2: torch.Size([11, 64, 70, 70])
After Pool2: torch.Size([11, 64, 23, 23])
After Conv3 and BN3: torch.Size([11, 128, 20, 20])
After Pool2_2: torch.Size([11, 128, 9, 9])
After Conv4 and BN4: torch.Size([11, 128, 6, 6])
After Flatten: torch.Size([11, 4608])
After FC1: torch.Size([11, 512])
After Linear2: torch.Size([11, 192])
After Normalizing feature embedding: torch.Size([11, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([11, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([11, 3, 224, 224])
After Conv1 and BN1: torch.Size([11, 32, 221, 221])
After Pool1: torch.Size([11, 32, 73, 73])
After Conv2 and BN2: torch.Size([11, 64, 70, 70])
After Pool2: torch.Size([11, 64, 23, 23])
After Conv3 and BN3: torch.Size([11, 128, 20, 20])
After Pool2_2: torch.Size([11, 128, 9, 9])
After Conv4 and BN4: torch.Size([11, 128, 6, 6])
After Flatten: torch.Size([11, 4608])
After FC1: torch.Size([11, 512])
After Linear2: torch.Size([11, 192])
After Normalizing feature embedding: torch.Size([11, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([11, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([10, 3, 224, 224])
After Conv1 and BN1: torch.Size([10, 32, 221, 221])
After Pool1: torch.Size([10, 32, 73, 73])
After Conv2 and BN2: torch.Size([10, 64, 70, 70])
After Pool2: torch.Size([10, 64, 23, 23])
After Conv3 and BN3: torch.Size([10, 128, 20, 20])
After Pool2_2: torch.Size([10, 128, 9, 9])
After Conv4 and BN4: torch.Size([10, 128, 6, 6])
After Flatten: torch.Size([10, 4608])
After FC1: torch.Size([10, 512])
After Linear2: torch.Size([10, 192])
After Normalizing feature embedding: torch.Size([10, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([10, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([10, 3, 224, 224])
After Conv1 and BN1: torch.Size([10, 32, 221, 221])
After Pool1: torch.Size([10, 32, 73, 73])
After Conv2 and BN2: torch.Size([10, 64, 70, 70])
After Pool2: torch.Size([10, 64, 23, 23])
After Conv3 and BN3: torch.Size([10, 128, 20, 20])
After Pool2_2: torch.Size([10, 128, 9, 9])
After Conv4 and BN4: torch.Size([10, 128, 6, 6])
After Flatten: torch.Size([10, 4608])
After FC1: torch.Size([10, 512])
After Linear2: torch.Size([10, 192])
After Normalizing feature embedding: torch.Size([10, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([10, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([10, 3, 224, 224])
After Conv1 and BN1: torch.Size([10, 32, 221, 221])
After Pool1: torch.Size([10, 32, 73, 73])
After Conv2 and BN2: torch.Size([10, 64, 70, 70])
After Pool2: torch.Size([10, 64, 23, 23])
After Conv3 and BN3: torch.Size([10, 128, 20, 20])
After Pool2_2: torch.Size([10, 128, 9, 9])
After Conv4 and BN4: torch.Size([10, 128, 6, 6])
After Flatten: torch.Size([10, 4608])
After FC1: torch.Size([10, 512])
After Linear2: torch.Size([10, 192])
After Normalizing feature embedding: torch.Size([10, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([10, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([10, 3, 224, 224])
After Conv1 and BN1: torch.Size([10, 32, 221, 221])
After Pool1: torch.Size([10, 32, 73, 73])
After Conv2 and BN2: torch.Size([10, 64, 70, 70])
After Pool2: torch.Size([10, 64, 23, 23])
After Conv3 and BN3: torch.Size([10, 128, 20, 20])
After Pool2_2: torch.Size([10, 128, 9, 9])
After Conv4 and BN4: torch.Size([10, 128, 6, 6])
After Flatten: torch.Size([10, 4608])
After FC1: torch.Size([10, 512])
After Linear2: torch.Size([10, 192])
After Normalizing feature embedding: torch.Size([10, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([10, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([10, 3, 224, 224])
After Conv1 and BN1: torch.Size([10, 32, 221, 221])
After Pool1: torch.Size([10, 32, 73, 73])
After Conv2 and BN2: torch.Size([10, 64, 70, 70])
After Pool2: torch.Size([10, 64, 23, 23])
After Conv3 and BN3: torch.Size([10, 128, 20, 20])
After Pool2_2: torch.Size([10, 128, 9, 9])
After Conv4 and BN4: torch.Size([10, 128, 6, 6])
After Flatten: torch.Size([10, 4608])
After FC1: torch.Size([10, 512])
After Linear2: torch.Size([10, 192])
After Normalizing feature embedding: torch.Size([10, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([10, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([10, 3, 224, 224])
After Conv1 and BN1: torch.Size([10, 32, 221, 221])
After Pool1: torch.Size([10, 32, 73, 73])
After Conv2 and BN2: torch.Size([10, 64, 70, 70])
After Pool2: torch.Size([10, 64, 23, 23])
After Conv3 and BN3: torch.Size([10, 128, 20, 20])
After Pool2_2: torch.Size([10, 128, 9, 9])
After Conv4 and BN4: torch.Size([10, 128, 6, 6])
After Flatten: torch.Size([10, 4608])
After FC1: torch.Size([10, 512])
After Linear2: torch.Size([10, 192])
After Normalizing feature embedding: torch.Size([10, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([10, 4])
Input size: torch.Size([1, 3, 224, 224])
After Conv1 and BN1: torch.Size([1, 32, 221, 221])
After Pool1: torch.Size([1, 32, 73, 73])
After Conv2 and BN2: torch.Size([1, 64, 70, 70])
After Pool2: torch.Size([1, 64, 23, 23])
After Conv3 and BN3: torch.Size([1, 128, 20, 20])
After Pool2_2: torch.Size([1, 128, 9, 9])
After Conv4 and BN4: torch.Size([1, 128, 6, 6])
After Flatten: torch.Size([1, 4608])
After FC1: torch.Size([1, 512])
After Linear2: torch.Size([1, 192])
After Normalizing feature embedding: torch.Size([1, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([1, 4])
Input size: torch.Size([1, 3, 224, 224])
After Conv1 and BN1: torch.Size([1, 32, 221, 221])
After Pool1: torch.Size([1, 32, 73, 73])
After Conv2 and BN2: torch.Size([1, 64, 70, 70])
After Pool2: torch.Size([1, 64, 23, 23])
After Conv3 and BN3: torch.Size([1, 128, 20, 20])
After Pool2_2: torch.Size([1, 128, 9, 9])
After Conv4 and BN4: torch.Size([1, 128, 6, 6])
After Flatten: torch.Size([1, 4608])
After FC1: torch.Size([1, 512])
After Linear2: torch.Size([1, 192])
After Normalizing feature embedding: torch.Size([1, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([1, 4])
Input size: torch.Size([1, 3, 224, 224])
After Conv1 and BN1: torch.Size([1, 32, 221, 221])
After Pool1: torch.Size([1, 32, 73, 73])
After Conv2 and BN2: torch.Size([1, 64, 70, 70])
After Pool2: torch.Size([1, 64, 23, 23])
After Conv3 and BN3: torch.Size([1, 128, 20, 20])
After Pool2_2: torch.Size([1, 128, 9, 9])
After Conv4 and BN4: torch.Size([1, 128, 6, 6])
After Flatten: torch.Size([1, 4608])
After FC1: torch.Size([1, 512])
After Linear2: torch.Size([1, 192])
After Normalizing feature embedding: torch.Size([1, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([1, 4])
Input size: torch.Size([1, 3, 224, 224])
After Conv1 and BN1: torch.Size([1, 32, 221, 221])
After Pool1: torch.Size([1, 32, 73, 73])
After Conv2 and BN2: torch.Size([1, 64, 70, 70])
After Pool2: torch.Size([1, 64, 23, 23])
After Conv3 and BN3: torch.Size([1, 128, 20, 20])
After Pool2_2: torch.Size([1, 128, 9, 9])
After Conv4 and BN4: torch.Size([1, 128, 6, 6])
After Flatten: torch.Size([1, 4608])
After FC1: torch.Size([1, 512])
After Linear2: torch.Size([1, 192])
After Normalizing feature embedding: torch.Size([1, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([1, 4])
Input size: torch.Size([1, 3, 224, 224])
After Conv1 and BN1: torch.Size([1, 32, 221, 221])
After Pool1: torch.Size([1, 32, 73, 73])
After Conv2 and BN2: torch.Size([1, 64, 70, 70])
After Pool2: torch.Size([1, 64, 23, 23])
After Conv3 and BN3: torch.Size([1, 128, 20, 20])
After Pool2_2: torch.Size([1, 128, 9, 9])
After Conv4 and BN4: torch.Size([1, 128, 6, 6])
After Flatten: torch.Size([1, 4608])
After FC1: torch.Size([1, 512])
After Linear2: torch.Size([1, 192])
After Normalizing feature embedding: torch.Size([1, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([1, 4])
Input size: torch.Size([1, 3, 224, 224])
After Conv1 and BN1: torch.Size([1, 32, 221, 221])
After Pool1: torch.Size([1, 32, 73, 73])
After Conv2 and BN2: torch.Size([1, 64, 70, 70])
After Pool2: torch.Size([1, 64, 23, 23])
After Conv3 and BN3: torch.Size([1, 128, 20, 20])
After Pool2_2: torch.Size([1, 128, 9, 9])
After Conv4 and BN4: torch.Size([1, 128, 6, 6])
After Flatten: torch.Size([1, 4608])
After FC1: torch.Size([1, 512])
After Linear2: torch.Size([1, 192])
After Normalizing feature embedding: torch.Size([1, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([1, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([2, 3, 224, 224])
After Conv1 and BN1: torch.Size([2, 32, 221, 221])
After Pool1: torch.Size([2, 32, 73, 73])
After Conv2 and BN2: torch.Size([2, 64, 70, 70])
After Pool2: torch.Size([2, 64, 23, 23])
After Conv3 and BN3: torch.Size([2, 128, 20, 20])
After Pool2_2: torch.Size([2, 128, 9, 9])
After Conv4 and BN4: torch.Size([2, 128, 6, 6])
After Flatten: torch.Size([2, 4608])
After FC1: torch.Size([2, 512])
After Linear2: torch.Size([2, 192])
After Normalizing feature embedding: torch.Size([2, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([2, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([2, 3, 224, 224])
After Conv1 and BN1: torch.Size([2, 32, 221, 221])
After Pool1: torch.Size([2, 32, 73, 73])
After Conv2 and BN2: torch.Size([2, 64, 70, 70])
After Pool2: torch.Size([2, 64, 23, 23])
After Conv3 and BN3: torch.Size([2, 128, 20, 20])
After Pool2_2: torch.Size([2, 128, 9, 9])
After Conv4 and BN4: torch.Size([2, 128, 6, 6])
After Flatten: torch.Size([2, 4608])
After FC1: torch.Size([2, 512])
After Linear2: torch.Size([2, 192])
After Normalizing feature embedding: torch.Size([2, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([2, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([2, 3, 224, 224])
After Conv1 and BN1: torch.Size([2, 32, 221, 221])
After Pool1: torch.Size([2, 32, 73, 73])
After Conv2 and BN2: torch.Size([2, 64, 70, 70])
After Pool2: torch.Size([2, 64, 23, 23])
After Conv3 and BN3: torch.Size([2, 128, 20, 20])
After Pool2_2: torch.Size([2, 128, 9, 9])
After Conv4 and BN4: torch.Size([2, 128, 6, 6])
After Flatten: torch.Size([2, 4608])
After FC1: torch.Size([2, 512])
After Linear2: torch.Size([2, 192])
After Normalizing feature embedding: torch.Size([2, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([2, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([2, 3, 224, 224])
After Conv1 and BN1: torch.Size([2, 32, 221, 221])
After Pool1: torch.Size([2, 32, 73, 73])
After Conv2 and BN2: torch.Size([2, 64, 70, 70])
After Pool2: torch.Size([2, 64, 23, 23])
After Conv3 and BN3: torch.Size([2, 128, 20, 20])
After Pool2_2: torch.Size([2, 128, 9, 9])
After Conv4 and BN4: torch.Size([2, 128, 6, 6])
After Flatten: torch.Size([2, 4608])
After FC1: torch.Size([2, 512])
After Linear2: torch.Size([2, 192])
After Normalizing feature embedding: torch.Size([2, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([2, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([2, 3, 224, 224])
After Conv1 and BN1: torch.Size([2, 32, 221, 221])
After Pool1: torch.Size([2, 32, 73, 73])
After Conv2 and BN2: torch.Size([2, 64, 70, 70])
After Pool2: torch.Size([2, 64, 23, 23])
After Conv3 and BN3: torch.Size([2, 128, 20, 20])
After Pool2_2: torch.Size([2, 128, 9, 9])
After Conv4 and BN4: torch.Size([2, 128, 6, 6])
After Flatten: torch.Size([2, 4608])
After FC1: torch.Size([2, 512])
After Linear2: torch.Size([2, 192])
After Normalizing feature embedding: torch.Size([2, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([2, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([2, 3, 224, 224])
After Conv1 and BN1: torch.Size([2, 32, 221, 221])
After Pool1: torch.Size([2, 32, 73, 73])
After Conv2 and BN2: torch.Size([2, 64, 70, 70])
After Pool2: torch.Size([2, 64, 23, 23])
After Conv3 and BN3: torch.Size([2, 128, 20, 20])
After Pool2_2: torch.Size([2, 128, 9, 9])
After Conv4 and BN4: torch.Size([2, 128, 6, 6])
After Flatten: torch.Size([2, 4608])
After FC1: torch.Size([2, 512])
After Linear2: torch.Size([2, 192])
After Normalizing feature embedding: torch.Size([2, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([2, 4])
Input size: torch.Size([14, 3, 224, 224])
After Conv1 and BN1: torch.Size([14, 32, 221, 221])
After Pool1: torch.Size([14, 32, 73, 73])
After Conv2 and BN2: torch.Size([14, 64, 70, 70])
After Pool2: torch.Size([14, 64, 23, 23])
After Conv3 and BN3: torch.Size([14, 128, 20, 20])
After Pool2_2: torch.Size([14, 128, 9, 9])
After Conv4 and BN4: torch.Size([14, 128, 6, 6])
After Flatten: torch.Size([14, 4608])
After FC1: torch.Size([14, 512])
After Linear2: torch.Size([14, 192])
After Normalizing feature embedding: torch.Size([14, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([14, 4])
Input size: torch.Size([14, 3, 224, 224])
After Conv1 and BN1: torch.Size([14, 32, 221, 221])
After Pool1: torch.Size([14, 32, 73, 73])
After Conv2 and BN2: torch.Size([14, 64, 70, 70])
After Pool2: torch.Size([14, 64, 23, 23])
After Conv3 and BN3: torch.Size([14, 128, 20, 20])
After Pool2_2: torch.Size([14, 128, 9, 9])
After Conv4 and BN4: torch.Size([14, 128, 6, 6])
After Flatten: torch.Size([14, 4608])
After FC1: torch.Size([14, 512])
After Linear2: torch.Size([14, 192])
After Normalizing feature embedding: torch.Size([14, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([14, 4])
Input size: torch.Size([14, 3, 224, 224])
After Conv1 and BN1: torch.Size([14, 32, 221, 221])
After Pool1: torch.Size([14, 32, 73, 73])
After Conv2 and BN2: torch.Size([14, 64, 70, 70])
After Pool2: torch.Size([14, 64, 23, 23])
After Conv3 and BN3: torch.Size([14, 128, 20, 20])
After Pool2_2: torch.Size([14, 128, 9, 9])
After Conv4 and BN4: torch.Size([14, 128, 6, 6])
After Flatten: torch.Size([14, 4608])
After FC1: torch.Size([14, 512])
After Linear2: torch.Size([14, 192])
After Normalizing feature embedding: torch.Size([14, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([14, 4])
Input size: torch.Size([14, 3, 224, 224])
After Conv1 and BN1: torch.Size([14, 32, 221, 221])
After Pool1: torch.Size([14, 32, 73, 73])
After Conv2 and BN2: torch.Size([14, 64, 70, 70])
After Pool2: torch.Size([14, 64, 23, 23])
After Conv3 and BN3: torch.Size([14, 128, 20, 20])
After Pool2_2: torch.Size([14, 128, 9, 9])
After Conv4 and BN4: torch.Size([14, 128, 6, 6])
After Flatten: torch.Size([14, 4608])
After FC1: torch.Size([14, 512])
After Linear2: torch.Size([14, 192])
After Normalizing feature embedding: torch.Size([14, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([14, 4])
Input size: torch.Size([14, 3, 224, 224])
After Conv1 and BN1: torch.Size([14, 32, 221, 221])
After Pool1: torch.Size([14, 32, 73, 73])
After Conv2 and BN2: torch.Size([14, 64, 70, 70])
After Pool2: torch.Size([14, 64, 23, 23])
After Conv3 and BN3: torch.Size([14, 128, 20, 20])
After Pool2_2: torch.Size([14, 128, 9, 9])
After Conv4 and BN4: torch.Size([14, 128, 6, 6])
After Flatten: torch.Size([14, 4608])
After FC1: torch.Size([14, 512])
After Linear2: torch.Size([14, 192])
After Normalizing feature embedding: torch.Size([14, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([14, 4])
Input size: torch.Size([14, 3, 224, 224])
After Conv1 and BN1: torch.Size([14, 32, 221, 221])
After Pool1: torch.Size([14, 32, 73, 73])
After Conv2 and BN2: torch.Size([14, 64, 70, 70])
After Pool2: torch.Size([14, 64, 23, 23])
After Conv3 and BN3: torch.Size([14, 128, 20, 20])
After Pool2_2: torch.Size([14, 128, 9, 9])
After Conv4 and BN4: torch.Size([14, 128, 6, 6])
After Flatten: torch.Size([14, 4608])
After FC1: torch.Size([14, 512])
After Linear2: torch.Size([14, 192])
After Normalizing feature embedding: torch.Size([14, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([14, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([14, 3, 224, 224])
After Conv1 and BN1: torch.Size([14, 32, 221, 221])
After Pool1: torch.Size([14, 32, 73, 73])
After Conv2 and BN2: torch.Size([14, 64, 70, 70])
After Pool2: torch.Size([14, 64, 23, 23])
After Conv3 and BN3: torch.Size([14, 128, 20, 20])
After Pool2_2: torch.Size([14, 128, 9, 9])
After Conv4 and BN4: torch.Size([14, 128, 6, 6])
After Flatten: torch.Size([14, 4608])
After FC1: torch.Size([14, 512])
After Linear2: torch.Size([14, 192])
After Normalizing feature embedding: torch.Size([14, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([14, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([14, 3, 224, 224])
After Conv1 and BN1: torch.Size([14, 32, 221, 221])
After Pool1: torch.Size([14, 32, 73, 73])
After Conv2 and BN2: torch.Size([14, 64, 70, 70])
After Pool2: torch.Size([14, 64, 23, 23])
After Conv3 and BN3: torch.Size([14, 128, 20, 20])
After Pool2_2: torch.Size([14, 128, 9, 9])
After Conv4 and BN4: torch.Size([14, 128, 6, 6])
After Flatten: torch.Size([14, 4608])
After FC1: torch.Size([14, 512])
After Linear2: torch.Size([14, 192])
After Normalizing feature embedding: torch.Size([14, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([14, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([14, 3, 224, 224])
After Conv1 and BN1: torch.Size([14, 32, 221, 221])
After Pool1: torch.Size([14, 32, 73, 73])
After Conv2 and BN2: torch.Size([14, 64, 70, 70])
After Pool2: torch.Size([14, 64, 23, 23])
After Conv3 and BN3: torch.Size([14, 128, 20, 20])
After Pool2_2: torch.Size([14, 128, 9, 9])
After Conv4 and BN4: torch.Size([14, 128, 6, 6])
After Flatten: torch.Size([14, 4608])
After FC1: torch.Size([14, 512])
After Linear2: torch.Size([14, 192])
After Normalizing feature embedding: torch.Size([14, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([14, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([14, 3, 224, 224])
After Conv1 and BN1: torch.Size([14, 32, 221, 221])
After Pool1: torch.Size([14, 32, 73, 73])
After Conv2 and BN2: torch.Size([14, 64, 70, 70])
After Pool2: torch.Size([14, 64, 23, 23])
After Conv3 and BN3: torch.Size([14, 128, 20, 20])
After Pool2_2: torch.Size([14, 128, 9, 9])
After Conv4 and BN4: torch.Size([14, 128, 6, 6])
After Flatten: torch.Size([14, 4608])
After FC1: torch.Size([14, 512])
After Linear2: torch.Size([14, 192])
After Normalizing feature embedding: torch.Size([14, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([14, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([14, 3, 224, 224])
After Conv1 and BN1: torch.Size([14, 32, 221, 221])
After Pool1: torch.Size([14, 32, 73, 73])
After Conv2 and BN2: torch.Size([14, 64, 70, 70])
After Pool2: torch.Size([14, 64, 23, 23])
After Conv3 and BN3: torch.Size([14, 128, 20, 20])
After Pool2_2: torch.Size([14, 128, 9, 9])
After Conv4 and BN4: torch.Size([14, 128, 6, 6])
After Flatten: torch.Size([14, 4608])
After FC1: torch.Size([14, 512])
After Linear2: torch.Size([14, 192])
After Normalizing feature embedding: torch.Size([14, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([14, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([14, 3, 224, 224])
After Conv1 and BN1: torch.Size([14, 32, 221, 221])
After Pool1: torch.Size([14, 32, 73, 73])
After Conv2 and BN2: torch.Size([14, 64, 70, 70])
After Pool2: torch.Size([14, 64, 23, 23])
After Conv3 and BN3: torch.Size([14, 128, 20, 20])
After Pool2_2: torch.Size([14, 128, 9, 9])
After Conv4 and BN4: torch.Size([14, 128, 6, 6])
After Flatten: torch.Size([14, 4608])
After FC1: torch.Size([14, 512])
After Linear2: torch.Size([14, 192])
After Normalizing feature embedding: torch.Size([14, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([14, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([4, 3, 224, 224])
After Conv1 and BN1: torch.Size([4, 32, 221, 221])
After Pool1: torch.Size([4, 32, 73, 73])
After Conv2 and BN2: torch.Size([4, 64, 70, 70])
After Pool2: torch.Size([4, 64, 23, 23])
After Conv3 and BN3: torch.Size([4, 128, 20, 20])
After Pool2_2: torch.Size([4, 128, 9, 9])
After Conv4 and BN4: torch.Size([4, 128, 6, 6])
After Flatten: torch.Size([4, 4608])
After FC1: torch.Size([4, 512])
After Linear2: torch.Size([4, 192])
After Normalizing feature embedding: torch.Size([4, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([4, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([4, 3, 224, 224])
After Conv1 and BN1: torch.Size([4, 32, 221, 221])
After Pool1: torch.Size([4, 32, 73, 73])
After Conv2 and BN2: torch.Size([4, 64, 70, 70])
After Pool2: torch.Size([4, 64, 23, 23])
After Conv3 and BN3: torch.Size([4, 128, 20, 20])
After Pool2_2: torch.Size([4, 128, 9, 9])
After Conv4 and BN4: torch.Size([4, 128, 6, 6])
After Flatten: torch.Size([4, 4608])
After FC1: torch.Size([4, 512])
After Linear2: torch.Size([4, 192])
After Normalizing feature embedding: torch.Size([4, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([4, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([4, 3, 224, 224])
After Conv1 and BN1: torch.Size([4, 32, 221, 221])
After Pool1: torch.Size([4, 32, 73, 73])
After Conv2 and BN2: torch.Size([4, 64, 70, 70])
After Pool2: torch.Size([4, 64, 23, 23])
After Conv3 and BN3: torch.Size([4, 128, 20, 20])
After Pool2_2: torch.Size([4, 128, 9, 9])
After Conv4 and BN4: torch.Size([4, 128, 6, 6])
After Flatten: torch.Size([4, 4608])
After FC1: torch.Size([4, 512])
After Linear2: torch.Size([4, 192])
After Normalizing feature embedding: torch.Size([4, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([4, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([4, 3, 224, 224])
After Conv1 and BN1: torch.Size([4, 32, 221, 221])
After Pool1: torch.Size([4, 32, 73, 73])
After Conv2 and BN2: torch.Size([4, 64, 70, 70])
After Pool2: torch.Size([4, 64, 23, 23])
After Conv3 and BN3: torch.Size([4, 128, 20, 20])
After Pool2_2: torch.Size([4, 128, 9, 9])
After Conv4 and BN4: torch.Size([4, 128, 6, 6])
After Flatten: torch.Size([4, 4608])
After FC1: torch.Size([4, 512])
After Linear2: torch.Size([4, 192])
After Normalizing feature embedding: torch.Size([4, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([4, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([4, 3, 224, 224])
After Conv1 and BN1: torch.Size([4, 32, 221, 221])
After Pool1: torch.Size([4, 32, 73, 73])
After Conv2 and BN2: torch.Size([4, 64, 70, 70])
After Pool2: torch.Size([4, 64, 23, 23])
After Conv3 and BN3: torch.Size([4, 128, 20, 20])
After Pool2_2: torch.Size([4, 128, 9, 9])
After Conv4 and BN4: torch.Size([4, 128, 6, 6])
After Flatten: torch.Size([4, 4608])
After FC1: torch.Size([4, 512])
After Linear2: torch.Size([4, 192])
After Normalizing feature embedding: torch.Size([4, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([4, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([4, 3, 224, 224])
After Conv1 and BN1: torch.Size([4, 32, 221, 221])
After Pool1: torch.Size([4, 32, 73, 73])
After Conv2 and BN2: torch.Size([4, 64, 70, 70])
After Pool2: torch.Size([4, 64, 23, 23])
After Conv3 and BN3: torch.Size([4, 128, 20, 20])
After Pool2_2: torch.Size([4, 128, 9, 9])
After Conv4 and BN4: torch.Size([4, 128, 6, 6])
After Flatten: torch.Size([4, 4608])
After FC1: torch.Size([4, 512])
After Linear2: torch.Size([4, 192])
After Normalizing feature embedding: torch.Size([4, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([4, 4])
 Training time:23.498 seconds
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([31, 3, 224, 224])
After Conv1 and BN1: torch.Size([31, 32, 221, 221])
After Pool1: torch.Size([31, 32, 73, 73])
After Conv2 and BN2: torch.Size([31, 64, 70, 70])
After Pool2: torch.Size([31, 64, 23, 23])
After Conv3 and BN3: torch.Size([31, 128, 20, 20])
After Pool2_2: torch.Size([31, 128, 9, 9])
After Conv4 and BN4: torch.Size([31, 128, 6, 6])
After Flatten: torch.Size([31, 4608])
After FC1: torch.Size([31, 512])
After Linear2: torch.Size([31, 192])
After Normalizing feature embedding: torch.Size([31, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([31, 4])
 server global model correct 300
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([31, 3, 224, 224])
After Conv1 and BN1: torch.Size([31, 32, 221, 221])
After Pool1: torch.Size([31, 32, 73, 73])
After Conv2 and BN2: torch.Size([31, 64, 70, 70])
After Pool2: torch.Size([31, 64, 23, 23])
After Conv3 and BN3: torch.Size([31, 128, 20, 20])
After Pool2_2: torch.Size([31, 128, 9, 9])
After Conv4 and BN4: torch.Size([31, 128, 6, 6])
After Flatten: torch.Size([31, 4608])
After FC1: torch.Size([31, 512])
After Linear2: torch.Size([31, 192])
After Normalizing feature embedding: torch.Size([31, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([31, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([31, 3, 224, 224])
After Conv1 and BN1: torch.Size([31, 32, 221, 221])
After Pool1: torch.Size([31, 32, 73, 73])
After Conv2 and BN2: torch.Size([31, 64, 70, 70])
After Pool2: torch.Size([31, 64, 23, 23])
After Conv3 and BN3: torch.Size([31, 128, 20, 20])
After Pool2_2: torch.Size([31, 128, 9, 9])
After Conv4 and BN4: torch.Size([31, 128, 6, 6])
After Flatten: torch.Size([31, 4608])
After FC1: torch.Size([31, 512])
After Linear2: torch.Size([31, 192])
After Normalizing feature embedding: torch.Size([31, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([31, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([31, 3, 224, 224])
After Conv1 and BN1: torch.Size([31, 32, 221, 221])
After Pool1: torch.Size([31, 32, 73, 73])
After Conv2 and BN2: torch.Size([31, 64, 70, 70])
After Pool2: torch.Size([31, 64, 23, 23])
After Conv3 and BN3: torch.Size([31, 128, 20, 20])
After Pool2_2: torch.Size([31, 128, 9, 9])
After Conv4 and BN4: torch.Size([31, 128, 6, 6])
After Flatten: torch.Size([31, 4608])
After FC1: torch.Size([31, 512])
After Linear2: torch.Size([31, 192])
After Normalizing feature embedding: torch.Size([31, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([31, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([31, 3, 224, 224])
After Conv1 and BN1: torch.Size([31, 32, 221, 221])
After Pool1: torch.Size([31, 32, 73, 73])
After Conv2 and BN2: torch.Size([31, 64, 70, 70])
After Pool2: torch.Size([31, 64, 23, 23])
After Conv3 and BN3: torch.Size([31, 128, 20, 20])
After Pool2_2: torch.Size([31, 128, 9, 9])
After Conv4 and BN4: torch.Size([31, 128, 6, 6])
After Flatten: torch.Size([31, 4608])
After FC1: torch.Size([31, 512])
After Linear2: torch.Size([31, 192])
After Normalizing feature embedding: torch.Size([31, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([31, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([31, 3, 224, 224])
After Conv1 and BN1: torch.Size([31, 32, 221, 221])
After Pool1: torch.Size([31, 32, 73, 73])
After Conv2 and BN2: torch.Size([31, 64, 70, 70])
After Pool2: torch.Size([31, 64, 23, 23])
After Conv3 and BN3: torch.Size([31, 128, 20, 20])
After Pool2_2: torch.Size([31, 128, 9, 9])
After Conv4 and BN4: torch.Size([31, 128, 6, 6])
After Flatten: torch.Size([31, 4608])
After FC1: torch.Size([31, 512])
After Linear2: torch.Size([31, 192])
After Normalizing feature embedding: torch.Size([31, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([31, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([31, 3, 224, 224])
After Conv1 and BN1: torch.Size([31, 32, 221, 221])
After Pool1: torch.Size([31, 32, 73, 73])
After Conv2 and BN2: torch.Size([31, 64, 70, 70])
After Pool2: torch.Size([31, 64, 23, 23])
After Conv3 and BN3: torch.Size([31, 128, 20, 20])
After Pool2_2: torch.Size([31, 128, 9, 9])
After Conv4 and BN4: torch.Size([31, 128, 6, 6])
After Flatten: torch.Size([31, 4608])
After FC1: torch.Size([31, 512])
After Linear2: torch.Size([31, 192])
After Normalizing feature embedding: torch.Size([31, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([31, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([31, 3, 224, 224])
After Conv1 and BN1: torch.Size([31, 32, 221, 221])
After Pool1: torch.Size([31, 32, 73, 73])
After Conv2 and BN2: torch.Size([31, 64, 70, 70])
After Pool2: torch.Size([31, 64, 23, 23])
After Conv3 and BN3: torch.Size([31, 128, 20, 20])
After Pool2_2: torch.Size([31, 128, 9, 9])
After Conv4 and BN4: torch.Size([31, 128, 6, 6])
After Flatten: torch.Size([31, 4608])
After FC1: torch.Size([31, 512])
After Linear2: torch.Size([31, 192])
After Normalizing feature embedding: torch.Size([31, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([31, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([31, 3, 224, 224])
After Conv1 and BN1: torch.Size([31, 32, 221, 221])
After Pool1: torch.Size([31, 32, 73, 73])
After Conv2 and BN2: torch.Size([31, 64, 70, 70])
After Pool2: torch.Size([31, 64, 23, 23])
After Conv3 and BN3: torch.Size([31, 128, 20, 20])
After Pool2_2: torch.Size([31, 128, 9, 9])
After Conv4 and BN4: torch.Size([31, 128, 6, 6])
After Flatten: torch.Size([31, 4608])
After FC1: torch.Size([31, 512])
After Linear2: torch.Size([31, 192])
After Normalizing feature embedding: torch.Size([31, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([31, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([31, 3, 224, 224])
After Conv1 and BN1: torch.Size([31, 32, 221, 221])
After Pool1: torch.Size([31, 32, 73, 73])
After Conv2 and BN2: torch.Size([31, 64, 70, 70])
After Pool2: torch.Size([31, 64, 23, 23])
After Conv3 and BN3: torch.Size([31, 128, 20, 20])
After Pool2_2: torch.Size([31, 128, 9, 9])
After Conv4 and BN4: torch.Size([31, 128, 6, 6])
After Flatten: torch.Size([31, 4608])
After FC1: torch.Size([31, 512])
After Linear2: torch.Size([31, 192])
After Normalizing feature embedding: torch.Size([31, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([31, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([31, 3, 224, 224])
After Conv1 and BN1: torch.Size([31, 32, 221, 221])
After Pool1: torch.Size([31, 32, 73, 73])
After Conv2 and BN2: torch.Size([31, 64, 70, 70])
After Pool2: torch.Size([31, 64, 23, 23])
After Conv3 and BN3: torch.Size([31, 128, 20, 20])
After Pool2_2: torch.Size([31, 128, 9, 9])
After Conv4 and BN4: torch.Size([31, 128, 6, 6])
After Flatten: torch.Size([31, 4608])
After FC1: torch.Size([31, 512])
After Linear2: torch.Size([31, 192])
After Normalizing feature embedding: torch.Size([31, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([31, 4])
 Testing time:59.938 seconds
 avg_test_acc: {'uniform': 0.22883294522762299, 'validclass': 0.22883294522762299, 'labeldist': 0.2097814381122589}
 pfl_avg_test_acc: {'uniform': 0.2801678106188774, 'validclass': 0.531056709587574, 'labeldist': 0.7308485507965088}
Round:2 - Active clients:[83 30 56 24 16 23  2 27 28 13]:
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([19, 3, 224, 224])
After Conv1 and BN1: torch.Size([19, 32, 221, 221])
After Pool1: torch.Size([19, 32, 73, 73])
After Conv2 and BN2: torch.Size([19, 64, 70, 70])
After Pool2: torch.Size([19, 64, 23, 23])
After Conv3 and BN3: torch.Size([19, 128, 20, 20])
After Pool2_2: torch.Size([19, 128, 9, 9])
After Conv4 and BN4: torch.Size([19, 128, 6, 6])
After Flatten: torch.Size([19, 4608])
After FC1: torch.Size([19, 512])
After Linear2: torch.Size([19, 192])
After Normalizing feature embedding: torch.Size([19, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([19, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([19, 3, 224, 224])
After Conv1 and BN1: torch.Size([19, 32, 221, 221])
After Pool1: torch.Size([19, 32, 73, 73])
After Conv2 and BN2: torch.Size([19, 64, 70, 70])
After Pool2: torch.Size([19, 64, 23, 23])
After Conv3 and BN3: torch.Size([19, 128, 20, 20])
After Pool2_2: torch.Size([19, 128, 9, 9])
After Conv4 and BN4: torch.Size([19, 128, 6, 6])
After Flatten: torch.Size([19, 4608])
After FC1: torch.Size([19, 512])
After Linear2: torch.Size([19, 192])
After Normalizing feature embedding: torch.Size([19, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([19, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([19, 3, 224, 224])
After Conv1 and BN1: torch.Size([19, 32, 221, 221])
After Pool1: torch.Size([19, 32, 73, 73])
After Conv2 and BN2: torch.Size([19, 64, 70, 70])
After Pool2: torch.Size([19, 64, 23, 23])
After Conv3 and BN3: torch.Size([19, 128, 20, 20])
After Pool2_2: torch.Size([19, 128, 9, 9])
After Conv4 and BN4: torch.Size([19, 128, 6, 6])
After Flatten: torch.Size([19, 4608])
After FC1: torch.Size([19, 512])
After Linear2: torch.Size([19, 192])
After Normalizing feature embedding: torch.Size([19, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([19, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([19, 3, 224, 224])
After Conv1 and BN1: torch.Size([19, 32, 221, 221])
After Pool1: torch.Size([19, 32, 73, 73])
After Conv2 and BN2: torch.Size([19, 64, 70, 70])
After Pool2: torch.Size([19, 64, 23, 23])
After Conv3 and BN3: torch.Size([19, 128, 20, 20])
After Pool2_2: torch.Size([19, 128, 9, 9])
After Conv4 and BN4: torch.Size([19, 128, 6, 6])
After Flatten: torch.Size([19, 4608])
After FC1: torch.Size([19, 512])
After Linear2: torch.Size([19, 192])
After Normalizing feature embedding: torch.Size([19, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([19, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([19, 3, 224, 224])
After Conv1 and BN1: torch.Size([19, 32, 221, 221])
After Pool1: torch.Size([19, 32, 73, 73])
After Conv2 and BN2: torch.Size([19, 64, 70, 70])
After Pool2: torch.Size([19, 64, 23, 23])
After Conv3 and BN3: torch.Size([19, 128, 20, 20])
After Pool2_2: torch.Size([19, 128, 9, 9])
After Conv4 and BN4: torch.Size([19, 128, 6, 6])
After Flatten: torch.Size([19, 4608])
After FC1: torch.Size([19, 512])
After Linear2: torch.Size([19, 192])
After Normalizing feature embedding: torch.Size([19, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([19, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([19, 3, 224, 224])
After Conv1 and BN1: torch.Size([19, 32, 221, 221])
After Pool1: torch.Size([19, 32, 73, 73])
After Conv2 and BN2: torch.Size([19, 64, 70, 70])
After Pool2: torch.Size([19, 64, 23, 23])
After Conv3 and BN3: torch.Size([19, 128, 20, 20])
After Pool2_2: torch.Size([19, 128, 9, 9])
After Conv4 and BN4: torch.Size([19, 128, 6, 6])
After Flatten: torch.Size([19, 4608])
After FC1: torch.Size([19, 512])
After Linear2: torch.Size([19, 192])
After Normalizing feature embedding: torch.Size([19, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([19, 4])
Input size: torch.Size([27, 3, 224, 224])
After Conv1 and BN1: torch.Size([27, 32, 221, 221])
After Pool1: torch.Size([27, 32, 73, 73])
After Conv2 and BN2: torch.Size([27, 64, 70, 70])
After Pool2: torch.Size([27, 64, 23, 23])
After Conv3 and BN3: torch.Size([27, 128, 20, 20])
After Pool2_2: torch.Size([27, 128, 9, 9])
After Conv4 and BN4: torch.Size([27, 128, 6, 6])
After Flatten: torch.Size([27, 4608])
After FC1: torch.Size([27, 512])
After Linear2: torch.Size([27, 192])
After Normalizing feature embedding: torch.Size([27, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([27, 4])
Input size: torch.Size([27, 3, 224, 224])
After Conv1 and BN1: torch.Size([27, 32, 221, 221])
After Pool1: torch.Size([27, 32, 73, 73])
After Conv2 and BN2: torch.Size([27, 64, 70, 70])
After Pool2: torch.Size([27, 64, 23, 23])
After Conv3 and BN3: torch.Size([27, 128, 20, 20])
After Pool2_2: torch.Size([27, 128, 9, 9])
After Conv4 and BN4: torch.Size([27, 128, 6, 6])
After Flatten: torch.Size([27, 4608])
After FC1: torch.Size([27, 512])
After Linear2: torch.Size([27, 192])
After Normalizing feature embedding: torch.Size([27, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([27, 4])
Input size: torch.Size([27, 3, 224, 224])
After Conv1 and BN1: torch.Size([27, 32, 221, 221])
After Pool1: torch.Size([27, 32, 73, 73])
After Conv2 and BN2: torch.Size([27, 64, 70, 70])
After Pool2: torch.Size([27, 64, 23, 23])
After Conv3 and BN3: torch.Size([27, 128, 20, 20])
After Pool2_2: torch.Size([27, 128, 9, 9])
After Conv4 and BN4: torch.Size([27, 128, 6, 6])
After Flatten: torch.Size([27, 4608])
After FC1: torch.Size([27, 512])
After Linear2: torch.Size([27, 192])
After Normalizing feature embedding: torch.Size([27, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([27, 4])
Input size: torch.Size([27, 3, 224, 224])
After Conv1 and BN1: torch.Size([27, 32, 221, 221])
After Pool1: torch.Size([27, 32, 73, 73])
After Conv2 and BN2: torch.Size([27, 64, 70, 70])
After Pool2: torch.Size([27, 64, 23, 23])
After Conv3 and BN3: torch.Size([27, 128, 20, 20])
After Pool2_2: torch.Size([27, 128, 9, 9])
After Conv4 and BN4: torch.Size([27, 128, 6, 6])
After Flatten: torch.Size([27, 4608])
After FC1: torch.Size([27, 512])
After Linear2: torch.Size([27, 192])
After Normalizing feature embedding: torch.Size([27, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([27, 4])
Input size: torch.Size([27, 3, 224, 224])
After Conv1 and BN1: torch.Size([27, 32, 221, 221])
After Pool1: torch.Size([27, 32, 73, 73])
After Conv2 and BN2: torch.Size([27, 64, 70, 70])
After Pool2: torch.Size([27, 64, 23, 23])
After Conv3 and BN3: torch.Size([27, 128, 20, 20])
After Pool2_2: torch.Size([27, 128, 9, 9])
After Conv4 and BN4: torch.Size([27, 128, 6, 6])
After Flatten: torch.Size([27, 4608])
After FC1: torch.Size([27, 512])
After Linear2: torch.Size([27, 192])
After Normalizing feature embedding: torch.Size([27, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([27, 4])
Input size: torch.Size([27, 3, 224, 224])
After Conv1 and BN1: torch.Size([27, 32, 221, 221])
After Pool1: torch.Size([27, 32, 73, 73])
After Conv2 and BN2: torch.Size([27, 64, 70, 70])
After Pool2: torch.Size([27, 64, 23, 23])
After Conv3 and BN3: torch.Size([27, 128, 20, 20])
After Pool2_2: torch.Size([27, 128, 9, 9])
After Conv4 and BN4: torch.Size([27, 128, 6, 6])
After Flatten: torch.Size([27, 4608])
After FC1: torch.Size([27, 512])
After Linear2: torch.Size([27, 192])
After Normalizing feature embedding: torch.Size([27, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([27, 4])
Input size: torch.Size([21, 3, 224, 224])
After Conv1 and BN1: torch.Size([21, 32, 221, 221])
After Pool1: torch.Size([21, 32, 73, 73])
After Conv2 and BN2: torch.Size([21, 64, 70, 70])
After Pool2: torch.Size([21, 64, 23, 23])
After Conv3 and BN3: torch.Size([21, 128, 20, 20])
After Pool2_2: torch.Size([21, 128, 9, 9])
After Conv4 and BN4: torch.Size([21, 128, 6, 6])
After Flatten: torch.Size([21, 4608])
After FC1: torch.Size([21, 512])
After Linear2: torch.Size([21, 192])
After Normalizing feature embedding: torch.Size([21, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([21, 4])
Input size: torch.Size([21, 3, 224, 224])
After Conv1 and BN1: torch.Size([21, 32, 221, 221])
After Pool1: torch.Size([21, 32, 73, 73])
After Conv2 and BN2: torch.Size([21, 64, 70, 70])
After Pool2: torch.Size([21, 64, 23, 23])
After Conv3 and BN3: torch.Size([21, 128, 20, 20])
After Pool2_2: torch.Size([21, 128, 9, 9])
After Conv4 and BN4: torch.Size([21, 128, 6, 6])
After Flatten: torch.Size([21, 4608])
After FC1: torch.Size([21, 512])
After Linear2: torch.Size([21, 192])
After Normalizing feature embedding: torch.Size([21, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([21, 4])
Input size: torch.Size([21, 3, 224, 224])
After Conv1 and BN1: torch.Size([21, 32, 221, 221])
After Pool1: torch.Size([21, 32, 73, 73])
After Conv2 and BN2: torch.Size([21, 64, 70, 70])
After Pool2: torch.Size([21, 64, 23, 23])
After Conv3 and BN3: torch.Size([21, 128, 20, 20])
After Pool2_2: torch.Size([21, 128, 9, 9])
After Conv4 and BN4: torch.Size([21, 128, 6, 6])
After Flatten: torch.Size([21, 4608])
After FC1: torch.Size([21, 512])
After Linear2: torch.Size([21, 192])
After Normalizing feature embedding: torch.Size([21, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([21, 4])
Input size: torch.Size([21, 3, 224, 224])
After Conv1 and BN1: torch.Size([21, 32, 221, 221])
After Pool1: torch.Size([21, 32, 73, 73])
After Conv2 and BN2: torch.Size([21, 64, 70, 70])
After Pool2: torch.Size([21, 64, 23, 23])
After Conv3 and BN3: torch.Size([21, 128, 20, 20])
After Pool2_2: torch.Size([21, 128, 9, 9])
After Conv4 and BN4: torch.Size([21, 128, 6, 6])
After Flatten: torch.Size([21, 4608])
After FC1: torch.Size([21, 512])
After Linear2: torch.Size([21, 192])
After Normalizing feature embedding: torch.Size([21, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([21, 4])
Input size: torch.Size([21, 3, 224, 224])
After Conv1 and BN1: torch.Size([21, 32, 221, 221])
After Pool1: torch.Size([21, 32, 73, 73])
After Conv2 and BN2: torch.Size([21, 64, 70, 70])
After Pool2: torch.Size([21, 64, 23, 23])
After Conv3 and BN3: torch.Size([21, 128, 20, 20])
After Pool2_2: torch.Size([21, 128, 9, 9])
After Conv4 and BN4: torch.Size([21, 128, 6, 6])
After Flatten: torch.Size([21, 4608])
After FC1: torch.Size([21, 512])
After Linear2: torch.Size([21, 192])
After Normalizing feature embedding: torch.Size([21, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([21, 4])
Input size: torch.Size([21, 3, 224, 224])
After Conv1 and BN1: torch.Size([21, 32, 221, 221])
After Pool1: torch.Size([21, 32, 73, 73])
After Conv2 and BN2: torch.Size([21, 64, 70, 70])
After Pool2: torch.Size([21, 64, 23, 23])
After Conv3 and BN3: torch.Size([21, 128, 20, 20])
After Pool2_2: torch.Size([21, 128, 9, 9])
After Conv4 and BN4: torch.Size([21, 128, 6, 6])
After Flatten: torch.Size([21, 4608])
After FC1: torch.Size([21, 512])
After Linear2: torch.Size([21, 192])
After Normalizing feature embedding: torch.Size([21, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([21, 4])
Input size: torch.Size([8, 3, 224, 224])
After Conv1 and BN1: torch.Size([8, 32, 221, 221])
After Pool1: torch.Size([8, 32, 73, 73])
After Conv2 and BN2: torch.Size([8, 64, 70, 70])
After Pool2: torch.Size([8, 64, 23, 23])
After Conv3 and BN3: torch.Size([8, 128, 20, 20])
After Pool2_2: torch.Size([8, 128, 9, 9])
After Conv4 and BN4: torch.Size([8, 128, 6, 6])
After Flatten: torch.Size([8, 4608])
After FC1: torch.Size([8, 512])
After Linear2: torch.Size([8, 192])
After Normalizing feature embedding: torch.Size([8, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([8, 4])
Input size: torch.Size([8, 3, 224, 224])
After Conv1 and BN1: torch.Size([8, 32, 221, 221])
After Pool1: torch.Size([8, 32, 73, 73])
After Conv2 and BN2: torch.Size([8, 64, 70, 70])
After Pool2: torch.Size([8, 64, 23, 23])
After Conv3 and BN3: torch.Size([8, 128, 20, 20])
After Pool2_2: torch.Size([8, 128, 9, 9])
After Conv4 and BN4: torch.Size([8, 128, 6, 6])
After Flatten: torch.Size([8, 4608])
After FC1: torch.Size([8, 512])
After Linear2: torch.Size([8, 192])
After Normalizing feature embedding: torch.Size([8, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([8, 4])
Input size: torch.Size([8, 3, 224, 224])
After Conv1 and BN1: torch.Size([8, 32, 221, 221])
After Pool1: torch.Size([8, 32, 73, 73])
After Conv2 and BN2: torch.Size([8, 64, 70, 70])
After Pool2: torch.Size([8, 64, 23, 23])
After Conv3 and BN3: torch.Size([8, 128, 20, 20])
After Pool2_2: torch.Size([8, 128, 9, 9])
After Conv4 and BN4: torch.Size([8, 128, 6, 6])
After Flatten: torch.Size([8, 4608])
After FC1: torch.Size([8, 512])
After Linear2: torch.Size([8, 192])
After Normalizing feature embedding: torch.Size([8, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([8, 4])
Input size: torch.Size([8, 3, 224, 224])
After Conv1 and BN1: torch.Size([8, 32, 221, 221])
After Pool1: torch.Size([8, 32, 73, 73])
After Conv2 and BN2: torch.Size([8, 64, 70, 70])
After Pool2: torch.Size([8, 64, 23, 23])
After Conv3 and BN3: torch.Size([8, 128, 20, 20])
After Pool2_2: torch.Size([8, 128, 9, 9])
After Conv4 and BN4: torch.Size([8, 128, 6, 6])
After Flatten: torch.Size([8, 4608])
After FC1: torch.Size([8, 512])
After Linear2: torch.Size([8, 192])
After Normalizing feature embedding: torch.Size([8, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([8, 4])
Input size: torch.Size([8, 3, 224, 224])
After Conv1 and BN1: torch.Size([8, 32, 221, 221])
After Pool1: torch.Size([8, 32, 73, 73])
After Conv2 and BN2: torch.Size([8, 64, 70, 70])
After Pool2: torch.Size([8, 64, 23, 23])
After Conv3 and BN3: torch.Size([8, 128, 20, 20])
After Pool2_2: torch.Size([8, 128, 9, 9])
After Conv4 and BN4: torch.Size([8, 128, 6, 6])
After Flatten: torch.Size([8, 4608])
After FC1: torch.Size([8, 512])
After Linear2: torch.Size([8, 192])
After Normalizing feature embedding: torch.Size([8, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([8, 4])
Input size: torch.Size([8, 3, 224, 224])
After Conv1 and BN1: torch.Size([8, 32, 221, 221])
After Pool1: torch.Size([8, 32, 73, 73])
After Conv2 and BN2: torch.Size([8, 64, 70, 70])
After Pool2: torch.Size([8, 64, 23, 23])
After Conv3 and BN3: torch.Size([8, 128, 20, 20])
After Pool2_2: torch.Size([8, 128, 9, 9])
After Conv4 and BN4: torch.Size([8, 128, 6, 6])
After Flatten: torch.Size([8, 4608])
After FC1: torch.Size([8, 512])
After Linear2: torch.Size([8, 192])
After Normalizing feature embedding: torch.Size([8, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([8, 4])
Input size: torch.Size([8, 3, 224, 224])
After Conv1 and BN1: torch.Size([8, 32, 221, 221])
After Pool1: torch.Size([8, 32, 73, 73])
After Conv2 and BN2: torch.Size([8, 64, 70, 70])
After Pool2: torch.Size([8, 64, 23, 23])
After Conv3 and BN3: torch.Size([8, 128, 20, 20])
After Pool2_2: torch.Size([8, 128, 9, 9])
After Conv4 and BN4: torch.Size([8, 128, 6, 6])
After Flatten: torch.Size([8, 4608])
After FC1: torch.Size([8, 512])
After Linear2: torch.Size([8, 192])
After Normalizing feature embedding: torch.Size([8, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([8, 4])
Input size: torch.Size([8, 3, 224, 224])
After Conv1 and BN1: torch.Size([8, 32, 221, 221])
After Pool1: torch.Size([8, 32, 73, 73])
After Conv2 and BN2: torch.Size([8, 64, 70, 70])
After Pool2: torch.Size([8, 64, 23, 23])
After Conv3 and BN3: torch.Size([8, 128, 20, 20])
After Pool2_2: torch.Size([8, 128, 9, 9])
After Conv4 and BN4: torch.Size([8, 128, 6, 6])
After Flatten: torch.Size([8, 4608])
After FC1: torch.Size([8, 512])
After Linear2: torch.Size([8, 192])
After Normalizing feature embedding: torch.Size([8, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([8, 4])
Input size: torch.Size([8, 3, 224, 224])
After Conv1 and BN1: torch.Size([8, 32, 221, 221])
After Pool1: torch.Size([8, 32, 73, 73])
After Conv2 and BN2: torch.Size([8, 64, 70, 70])
After Pool2: torch.Size([8, 64, 23, 23])
After Conv3 and BN3: torch.Size([8, 128, 20, 20])
After Pool2_2: torch.Size([8, 128, 9, 9])
After Conv4 and BN4: torch.Size([8, 128, 6, 6])
After Flatten: torch.Size([8, 4608])
After FC1: torch.Size([8, 512])
After Linear2: torch.Size([8, 192])
After Normalizing feature embedding: torch.Size([8, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([8, 4])
Input size: torch.Size([8, 3, 224, 224])
After Conv1 and BN1: torch.Size([8, 32, 221, 221])
After Pool1: torch.Size([8, 32, 73, 73])
After Conv2 and BN2: torch.Size([8, 64, 70, 70])
After Pool2: torch.Size([8, 64, 23, 23])
After Conv3 and BN3: torch.Size([8, 128, 20, 20])
After Pool2_2: torch.Size([8, 128, 9, 9])
After Conv4 and BN4: torch.Size([8, 128, 6, 6])
After Flatten: torch.Size([8, 4608])
After FC1: torch.Size([8, 512])
After Linear2: torch.Size([8, 192])
After Normalizing feature embedding: torch.Size([8, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([8, 4])
Input size: torch.Size([8, 3, 224, 224])
After Conv1 and BN1: torch.Size([8, 32, 221, 221])
After Pool1: torch.Size([8, 32, 73, 73])
After Conv2 and BN2: torch.Size([8, 64, 70, 70])
After Pool2: torch.Size([8, 64, 23, 23])
After Conv3 and BN3: torch.Size([8, 128, 20, 20])
After Pool2_2: torch.Size([8, 128, 9, 9])
After Conv4 and BN4: torch.Size([8, 128, 6, 6])
After Flatten: torch.Size([8, 4608])
After FC1: torch.Size([8, 512])
After Linear2: torch.Size([8, 192])
After Normalizing feature embedding: torch.Size([8, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([8, 4])
Input size: torch.Size([8, 3, 224, 224])
After Conv1 and BN1: torch.Size([8, 32, 221, 221])
After Pool1: torch.Size([8, 32, 73, 73])
After Conv2 and BN2: torch.Size([8, 64, 70, 70])
After Pool2: torch.Size([8, 64, 23, 23])
After Conv3 and BN3: torch.Size([8, 128, 20, 20])
After Pool2_2: torch.Size([8, 128, 9, 9])
After Conv4 and BN4: torch.Size([8, 128, 6, 6])
After Flatten: torch.Size([8, 4608])
After FC1: torch.Size([8, 512])
After Linear2: torch.Size([8, 192])
After Normalizing feature embedding: torch.Size([8, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([8, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([26, 3, 224, 224])
After Conv1 and BN1: torch.Size([26, 32, 221, 221])
After Pool1: torch.Size([26, 32, 73, 73])
After Conv2 and BN2: torch.Size([26, 64, 70, 70])
After Pool2: torch.Size([26, 64, 23, 23])
After Conv3 and BN3: torch.Size([26, 128, 20, 20])
After Pool2_2: torch.Size([26, 128, 9, 9])
After Conv4 and BN4: torch.Size([26, 128, 6, 6])
After Flatten: torch.Size([26, 4608])
After FC1: torch.Size([26, 512])
After Linear2: torch.Size([26, 192])
After Normalizing feature embedding: torch.Size([26, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([26, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([26, 3, 224, 224])
After Conv1 and BN1: torch.Size([26, 32, 221, 221])
After Pool1: torch.Size([26, 32, 73, 73])
After Conv2 and BN2: torch.Size([26, 64, 70, 70])
After Pool2: torch.Size([26, 64, 23, 23])
After Conv3 and BN3: torch.Size([26, 128, 20, 20])
After Pool2_2: torch.Size([26, 128, 9, 9])
After Conv4 and BN4: torch.Size([26, 128, 6, 6])
After Flatten: torch.Size([26, 4608])
After FC1: torch.Size([26, 512])
After Linear2: torch.Size([26, 192])
After Normalizing feature embedding: torch.Size([26, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([26, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([26, 3, 224, 224])
After Conv1 and BN1: torch.Size([26, 32, 221, 221])
After Pool1: torch.Size([26, 32, 73, 73])
After Conv2 and BN2: torch.Size([26, 64, 70, 70])
After Pool2: torch.Size([26, 64, 23, 23])
After Conv3 and BN3: torch.Size([26, 128, 20, 20])
After Pool2_2: torch.Size([26, 128, 9, 9])
After Conv4 and BN4: torch.Size([26, 128, 6, 6])
After Flatten: torch.Size([26, 4608])
After FC1: torch.Size([26, 512])
After Linear2: torch.Size([26, 192])
After Normalizing feature embedding: torch.Size([26, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([26, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([26, 3, 224, 224])
After Conv1 and BN1: torch.Size([26, 32, 221, 221])
After Pool1: torch.Size([26, 32, 73, 73])
After Conv2 and BN2: torch.Size([26, 64, 70, 70])
After Pool2: torch.Size([26, 64, 23, 23])
After Conv3 and BN3: torch.Size([26, 128, 20, 20])
After Pool2_2: torch.Size([26, 128, 9, 9])
After Conv4 and BN4: torch.Size([26, 128, 6, 6])
After Flatten: torch.Size([26, 4608])
After FC1: torch.Size([26, 512])
After Linear2: torch.Size([26, 192])
After Normalizing feature embedding: torch.Size([26, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([26, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([26, 3, 224, 224])
After Conv1 and BN1: torch.Size([26, 32, 221, 221])
After Pool1: torch.Size([26, 32, 73, 73])
After Conv2 and BN2: torch.Size([26, 64, 70, 70])
After Pool2: torch.Size([26, 64, 23, 23])
After Conv3 and BN3: torch.Size([26, 128, 20, 20])
After Pool2_2: torch.Size([26, 128, 9, 9])
After Conv4 and BN4: torch.Size([26, 128, 6, 6])
After Flatten: torch.Size([26, 4608])
After FC1: torch.Size([26, 512])
After Linear2: torch.Size([26, 192])
After Normalizing feature embedding: torch.Size([26, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([26, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([26, 3, 224, 224])
After Conv1 and BN1: torch.Size([26, 32, 221, 221])
After Pool1: torch.Size([26, 32, 73, 73])
After Conv2 and BN2: torch.Size([26, 64, 70, 70])
After Pool2: torch.Size([26, 64, 23, 23])
After Conv3 and BN3: torch.Size([26, 128, 20, 20])
After Pool2_2: torch.Size([26, 128, 9, 9])
After Conv4 and BN4: torch.Size([26, 128, 6, 6])
After Flatten: torch.Size([26, 4608])
After FC1: torch.Size([26, 512])
After Linear2: torch.Size([26, 192])
After Normalizing feature embedding: torch.Size([26, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([26, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([19, 3, 224, 224])
After Conv1 and BN1: torch.Size([19, 32, 221, 221])
After Pool1: torch.Size([19, 32, 73, 73])
After Conv2 and BN2: torch.Size([19, 64, 70, 70])
After Pool2: torch.Size([19, 64, 23, 23])
After Conv3 and BN3: torch.Size([19, 128, 20, 20])
After Pool2_2: torch.Size([19, 128, 9, 9])
After Conv4 and BN4: torch.Size([19, 128, 6, 6])
After Flatten: torch.Size([19, 4608])
After FC1: torch.Size([19, 512])
After Linear2: torch.Size([19, 192])
After Normalizing feature embedding: torch.Size([19, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([19, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([19, 3, 224, 224])
After Conv1 and BN1: torch.Size([19, 32, 221, 221])
After Pool1: torch.Size([19, 32, 73, 73])
After Conv2 and BN2: torch.Size([19, 64, 70, 70])
After Pool2: torch.Size([19, 64, 23, 23])
After Conv3 and BN3: torch.Size([19, 128, 20, 20])
After Pool2_2: torch.Size([19, 128, 9, 9])
After Conv4 and BN4: torch.Size([19, 128, 6, 6])
After Flatten: torch.Size([19, 4608])
After FC1: torch.Size([19, 512])
After Linear2: torch.Size([19, 192])
After Normalizing feature embedding: torch.Size([19, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([19, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
After Pool1: torch.Size([19, 32, 73, 73])
After Conv2 and BN2: torch.Size([19, 64, 70, 70])
After Pool2: torch.Size([19, 64, 23, 23])
After Conv3 and BN3: torch.Size([19, 128, 20, 20])
After Pool2_2: torch.Size([19, 128, 9, 9])
After Conv4 and BN4: torch.Size([19, 128, 6, 6])
After Flatten: torch.Size([19, 4608])
After FC1: torch.Size([19, 512])
After Linear2: torch.Size([19, 192])
After Normalizing feature embedding: torch.Size([19, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([19, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([19, 3, 224, 224])
After Conv1 and BN1: torch.Size([19, 32, 221, 221])
After Pool1: torch.Size([19, 32, 73, 73])
After Conv2 and BN2: torch.Size([19, 64, 70, 70])
After Pool2: torch.Size([19, 64, 23, 23])
After Conv3 and BN3: torch.Size([19, 128, 20, 20])
After Pool2_2: torch.Size([19, 128, 9, 9])
After Conv4 and BN4: torch.Size([19, 128, 6, 6])
After Flatten: torch.Size([19, 4608])
After FC1: torch.Size([19, 512])
After Linear2: torch.Size([19, 192])
After Normalizing feature embedding: torch.Size([19, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([19, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([19, 3, 224, 224])
After Conv1 and BN1: torch.Size([19, 32, 221, 221])
After Pool1: torch.Size([19, 32, 73, 73])
After Conv2 and BN2: torch.Size([19, 64, 70, 70])
After Pool2: torch.Size([19, 64, 23, 23])
After Conv3 and BN3: torch.Size([19, 128, 20, 20])
After Pool2_2: torch.Size([19, 128, 9, 9])
After Conv4 and BN4: torch.Size([19, 128, 6, 6])
After Flatten: torch.Size([19, 4608])
After FC1: torch.Size([19, 512])
After Linear2: torch.Size([19, 192])
After Normalizing feature embedding: torch.Size([19, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([19, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([19, 3, 224, 224])
After Conv1 and BN1: torch.Size([19, 32, 221, 221])
After Pool1: torch.Size([19, 32, 73, 73])
After Conv2 and BN2: torch.Size([19, 64, 70, 70])
After Pool2: torch.Size([19, 64, 23, 23])
After Conv3 and BN3: torch.Size([19, 128, 20, 20])
After Pool2_2: torch.Size([19, 128, 9, 9])
After Conv4 and BN4: torch.Size([19, 128, 6, 6])
After Flatten: torch.Size([19, 4608])
After FC1: torch.Size([19, 512])
After Linear2: torch.Size([19, 192])
After Normalizing feature embedding: torch.Size([19, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([19, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([16, 3, 224, 224])
After Conv1 and BN1: torch.Size([16, 32, 221, 221])
After Pool1: torch.Size([16, 32, 73, 73])
After Conv2 and BN2: torch.Size([16, 64, 70, 70])
After Pool2: torch.Size([16, 64, 23, 23])
After Conv3 and BN3: torch.Size([16, 128, 20, 20])
After Pool2_2: torch.Size([16, 128, 9, 9])
After Conv4 and BN4: torch.Size([16, 128, 6, 6])
After Flatten: torch.Size([16, 4608])
After FC1: torch.Size([16, 512])
After Linear2: torch.Size([16, 192])
After Normalizing feature embedding: torch.Size([16, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([16, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([16, 3, 224, 224])
After Conv1 and BN1: torch.Size([16, 32, 221, 221])
After Pool1: torch.Size([16, 32, 73, 73])
After Conv2 and BN2: torch.Size([16, 64, 70, 70])
After Pool2: torch.Size([16, 64, 23, 23])
After Conv3 and BN3: torch.Size([16, 128, 20, 20])
After Pool2_2: torch.Size([16, 128, 9, 9])
After Conv4 and BN4: torch.Size([16, 128, 6, 6])
After Flatten: torch.Size([16, 4608])
After FC1: torch.Size([16, 512])
After Linear2: torch.Size([16, 192])
After Normalizing feature embedding: torch.Size([16, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([16, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([16, 3, 224, 224])
After Conv1 and BN1: torch.Size([16, 32, 221, 221])
After Pool1: torch.Size([16, 32, 73, 73])
After Conv2 and BN2: torch.Size([16, 64, 70, 70])
After Pool2: torch.Size([16, 64, 23, 23])
After Conv3 and BN3: torch.Size([16, 128, 20, 20])
After Pool2_2: torch.Size([16, 128, 9, 9])
After Conv4 and BN4: torch.Size([16, 128, 6, 6])
After Flatten: torch.Size([16, 4608])
After FC1: torch.Size([16, 512])
After Linear2: torch.Size([16, 192])
After Normalizing feature embedding: torch.Size([16, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([16, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([16, 3, 224, 224])
After Conv1 and BN1: torch.Size([16, 32, 221, 221])
After Pool1: torch.Size([16, 32, 73, 73])
After Conv2 and BN2: torch.Size([16, 64, 70, 70])
After Pool2: torch.Size([16, 64, 23, 23])
After Conv3 and BN3: torch.Size([16, 128, 20, 20])
After Pool2_2: torch.Size([16, 128, 9, 9])
After Conv4 and BN4: torch.Size([16, 128, 6, 6])
After Flatten: torch.Size([16, 4608])
After FC1: torch.Size([16, 512])
After Linear2: torch.Size([16, 192])
After Normalizing feature embedding: torch.Size([16, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([16, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([16, 3, 224, 224])
After Conv1 and BN1: torch.Size([16, 32, 221, 221])
After Pool1: torch.Size([16, 32, 73, 73])
After Conv2 and BN2: torch.Size([16, 64, 70, 70])
After Pool2: torch.Size([16, 64, 23, 23])
After Conv3 and BN3: torch.Size([16, 128, 20, 20])
After Pool2_2: torch.Size([16, 128, 9, 9])
After Conv4 and BN4: torch.Size([16, 128, 6, 6])
After Flatten: torch.Size([16, 4608])
After FC1: torch.Size([16, 512])
After Linear2: torch.Size([16, 192])
After Normalizing feature embedding: torch.Size([16, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([16, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([32, 3, 224, 224])
After Conv1 and BN1: torch.Size([32, 32, 221, 221])
After Pool1: torch.Size([32, 32, 73, 73])
After Conv2 and BN2: torch.Size([32, 64, 70, 70])
After Pool2: torch.Size([32, 64, 23, 23])
After Conv3 and BN3: torch.Size([32, 128, 20, 20])
After Pool2_2: torch.Size([32, 128, 9, 9])
After Conv4 and BN4: torch.Size([32, 128, 6, 6])
After Flatten: torch.Size([32, 4608])
After FC1: torch.Size([32, 512])
After Linear2: torch.Size([32, 192])
After Normalizing feature embedding: torch.Size([32, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([32, 4])
Input size: torch.Size([16, 3, 224, 224])
After Conv1 and BN1: torch.Size([16, 32, 221, 221])
After Pool1: torch.Size([16, 32, 73, 73])
After Conv2 and BN2: torch.Size([16, 64, 70, 70])
After Pool2: torch.Size([16, 64, 23, 23])
After Conv3 and BN3: torch.Size([16, 128, 20, 20])
After Pool2_2: torch.Size([16, 128, 9, 9])
After Conv4 and BN4: torch.Size([16, 128, 6, 6])
After Flatten: torch.Size([16, 4608])
After FC1: torch.Size([16, 512])
After Linear2: torch.Size([16, 192])
After Normalizing feature embedding: torch.Size([16, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([16, 4])
Input size: torch.Size([8, 3, 224, 224])
After Conv1 and BN1: torch.Size([8, 32, 221, 221])
After Pool1: torch.Size([8, 32, 73, 73])
After Conv2 and BN2: torch.Size([8, 64, 70, 70])
After Pool2: torch.Size([8, 64, 23, 23])
After Conv3 and BN3: torch.Size([8, 128, 20, 20])
After Pool2_2: torch.Size([8, 128, 9, 9])
After Conv4 and BN4: torch.Size([8, 128, 6, 6])
After Flatten: torch.Size([8, 4608])
After FC1: torch.Size([8, 512])
After Linear2: torch.Size([8, 192])
After Normalizing feature embedding: torch.Size([8, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([8, 4])
Input size: torch.Size([8, 3, 224, 224])
After Conv1 and BN1: torch.Size([8, 32, 221, 221])
After Pool1: torch.Size([8, 32, 73, 73])
After Conv2 and BN2: torch.Size([8, 64, 70, 70])
After Pool2: torch.Size([8, 64, 23, 23])
After Conv3 and BN3: torch.Size([8, 128, 20, 20])
After Pool2_2: torch.Size([8, 128, 9, 9])
After Conv4 and BN4: torch.Size([8, 128, 6, 6])
After Flatten: torch.Size([8, 4608])
After FC1: torch.Size([8, 512])
After Linear2: torch.Size([8, 192])
After Normalizing feature embedding: torch.Size([8, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([8, 4])
Input size: torch.Size([8, 3, 224, 224])
After Conv1 and BN1: torch.Size([8, 32, 221, 221])
After Pool1: torch.Size([8, 32, 73, 73])
After Conv2 and BN2: torch.Size([8, 64, 70, 70])
After Pool2: torch.Size([8, 64, 23, 23])
After Conv3 and BN3: torch.Size([8, 128, 20, 20])
After Pool2_2: torch.Size([8, 128, 9, 9])
After Conv4 and BN4: torch.Size([8, 128, 6, 6])
After Flatten: torch.Size([8, 4608])
After FC1: torch.Size([8, 512])
After Linear2: torch.Size([8, 192])
After Normalizing feature embedding: torch.Size([8, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([8, 4])
Input size: torch.Size([8, 3, 224, 224])
After Conv1 and BN1: torch.Size([8, 32, 221, 221])
After Pool1: torch.Size([8, 32, 73, 73])
After Conv2 and BN2: torch.Size([8, 64, 70, 70])
After Pool2: torch.Size([8, 64, 23, 23])
After Conv3 and BN3: torch.Size([8, 128, 20, 20])
After Pool2_2: torch.Size([8, 128, 9, 9])
After Conv4 and BN4: torch.Size([8, 128, 6, 6])
After Flatten: torch.Size([8, 4608])
After FC1: torch.Size([8, 512])
After Linear2: torch.Size([8, 192])
After Normalizing feature embedding: torch.Size([8, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([8, 4])
Input size: torch.Size([8, 3, 224, 224])
After Conv1 and BN1: torch.Size([8, 32, 221, 221])
After Pool1: torch.Size([8, 32, 73, 73])
After Conv2 and BN2: torch.Size([8, 64, 70, 70])
After Pool2: torch.Size([8, 64, 23, 23])
After Conv3 and BN3: torch.Size([8, 128, 20, 20])
After Pool2_2: torch.Size([8, 128, 9, 9])
After Conv4 and BN4: torch.Size([8, 128, 6, 6])
After Flatten: torch.Size([8, 4608])
After FC1: torch.Size([8, 512])
After Linear2: torch.Size([8, 192])
After Normalizing feature embedding: torch.Size([8, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([8, 4])
Input size: torch.Size([8, 3, 224, 224])
After Conv1 and BN1: torch.Size([8, 32, 221, 221])
After Pool1: torch.Size([8, 32, 73, 73])
After Conv2 and BN2: torch.Size([8, 64, 70, 70])
After Pool2: torch.Size([8, 64, 23, 23])
After Conv3 and BN3: torch.Size([8, 128, 20, 20])
After Pool2_2: torch.Size([8, 128, 9, 9])
After Conv4 and BN4: torch.Size([8, 128, 6, 6])
After Flatten: torch.Size([8, 4608])
After FC1: torch.Size([8, 512])
After Linear2: torch.Size([8, 192])
After Normalizing feature embedding: torch.Size([8, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([8, 4])
Input size: torch.Size([14, 3, 224, 224])
After Conv1 and BN1: torch.Size([14, 32, 221, 221])
After Pool1: torch.Size([14, 32, 73, 73])
After Conv2 and BN2: torch.Size([14, 64, 70, 70])
After Pool2: torch.Size([14, 64, 23, 23])
After Conv3 and BN3: torch.Size([14, 128, 20, 20])
After Pool2_2: torch.Size([14, 128, 9, 9])
After Conv4 and BN4: torch.Size([14, 128, 6, 6])
After Flatten: torch.Size([14, 4608])
After FC1: torch.Size([14, 512])
After Linear2: torch.Size([14, 192])
After Normalizing feature embedding: torch.Size([14, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([14, 4])
Input size: torch.Size([14, 3, 224, 224])
After Conv1 and BN1: torch.Size([14, 32, 221, 221])
After Pool1: torch.Size([14, 32, 73, 73])
After Conv2 and BN2: torch.Size([14, 64, 70, 70])
After Pool2: torch.Size([14, 64, 23, 23])
After Conv3 and BN3: torch.Size([14, 128, 20, 20])
After Pool2_2: torch.Size([14, 128, 9, 9])
After Conv4 and BN4: torch.Size([14, 128, 6, 6])
After Flatten: torch.Size([14, 4608])
After FC1: torch.Size([14, 512])
After Linear2: torch.Size([14, 192])
After Normalizing feature embedding: torch.Size([14, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([14, 4])
Input size: torch.Size([14, 3, 224, 224])
After Conv1 and BN1: torch.Size([14, 32, 221, 221])
After Pool1: torch.Size([14, 32, 73, 73])
After Conv2 and BN2: torch.Size([14, 64, 70, 70])
After Pool2: torch.Size([14, 64, 23, 23])
After Conv3 and BN3: torch.Size([14, 128, 20, 20])
After Pool2_2: torch.Size([14, 128, 9, 9])
After Conv4 and BN4: torch.Size([14, 128, 6, 6])
After Flatten: torch.Size([14, 4608])
After FC1: torch.Size([14, 512])
After Linear2: torch.Size([14, 192])
After Normalizing feature embedding: torch.Size([14, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([14, 4])
Input size: torch.Size([14, 3, 224, 224])
After Conv1 and BN1: torch.Size([14, 32, 221, 221])
After Pool1: torch.Size([14, 32, 73, 73])
After Conv2 and BN2: torch.Size([14, 64, 70, 70])
After Pool2: torch.Size([14, 64, 23, 23])
After Conv3 and BN3: torch.Size([14, 128, 20, 20])
After Pool2_2: torch.Size([14, 128, 9, 9])
After Conv4 and BN4: torch.Size([14, 128, 6, 6])
After Flatten: torch.Size([14, 4608])
After FC1: torch.Size([14, 512])
After Linear2: torch.Size([14, 192])
After Normalizing feature embedding: torch.Size([14, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([14, 4])
Input size: torch.Size([14, 3, 224, 224])
After Conv1 and BN1: torch.Size([14, 32, 221, 221])
After Pool1: torch.Size([14, 32, 73, 73])
After Conv2 and BN2: torch.Size([14, 64, 70, 70])
After Pool2: torch.Size([14, 64, 23, 23])
After Conv3 and BN3: torch.Size([14, 128, 20, 20])
After Pool2_2: torch.Size([14, 128, 9, 9])
After Conv4 and BN4: torch.Size([14, 128, 6, 6])
After Flatten: torch.Size([14, 4608])
After FC1: torch.Size([14, 512])
After Linear2: torch.Size([14, 192])
After Normalizing feature embedding: torch.Size([14, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([14, 4])
Input size: torch.Size([14, 3, 224, 224])
After Conv1 and BN1: torch.Size([14, 32, 221, 221])
After Pool1: torch.Size([14, 32, 73, 73])
After Conv2 and BN2: torch.Size([14, 64, 70, 70])
After Pool2: torch.Size([14, 64, 23, 23])
After Conv3 and BN3: torch.Size([14, 128, 20, 20])
After Pool2_2: torch.Size([14, 128, 9, 9])
After Conv4 and BN4: torch.Size([14, 128, 6, 6])
After Flatten: torch.Size([14, 4608])
After FC1: torch.Size([14, 512])
After Linear2: torch.Size([14, 192])
After Normalizing feature embedding: torch.Size([14, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([14, 4])
 Training time:17.930 seconds
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Input size: torch.Size([64, 3, 224, 224])
After Conv1 and BN1: torch.Size([64, 32, 221, 221])
After Pool1: torch.Size([64, 32, 73, 73])
After Conv2 and BN2: torch.Size([64, 64, 70, 70])
After Pool2: torch.Size([64, 64, 23, 23])
After Conv3 and BN3: torch.Size([64, 128, 20, 20])
After Pool2_2: torch.Size([64, 128, 9, 9])
After Conv4 and BN4: torch.Size([64, 128, 6, 6])
After Flatten: torch.Size([64, 4608])
After FC1: torch.Size([64, 512])
After Linear2: torch.Size([64, 192])
After Normalizing feature embedding: torch.Size([64, 192])
Normalized Prototype size: torch.Size([4, 192])
Logits size: torch.Size([64, 4])
Traceback (most recent call last):
  File "D:\Comvis 2024\FedNH\main.py", line 246, in <module>
    run(args)
  File "D:\Comvis 2024\FedNH\main.py", line 176, in run
    server.run(filename=path + '_best_global_model.pkl', use_wandb=use_wandb, global_seed=args.global_seed)
  File "D:\Comvis 2024\FedNH\src\flbase\strategies\FedAvg.py", line 272, in run
    self.testing(round=r, active_only=True)
  File "D:\Comvis 2024\FedNH\src\flbase\strategies\FedAvg.py", line 171, in testing
    self.server_side_client.testing(round, testloader=None)  # use global testdataset
  File "D:\Comvis 2024\FedNH\src\flbase\strategies\FedUH.py", line 146, in testing
    for i, (x, y) in enumerate(testloader):
  File "C:\Users\admin\AppData\Local\Programs\Python\Python310\lib\site-packages\torch\utils\data\dataloader.py", line 628, in __next__
    data = self._next_data()
  File "C:\Users\admin\AppData\Local\Programs\Python\Python310\lib\site-packages\torch\utils\data\dataloader.py", line 671, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "C:\Users\admin\AppData\Local\Programs\Python\Python310\lib\site-packages\torch\utils\data\_utils\fetch.py", line 61, in fetch
    return self.collate_fn(data)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python310\lib\site-packages\torch\utils\data\_utils\collate.py", line 265, in default_collate
    return collate(batch, collate_fn_map=default_collate_fn_map)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python310\lib\site-packages\torch\utils\data\_utils\collate.py", line 143, in collate
    return [collate(samples, collate_fn_map=collate_fn_map) for samples in transposed]  # Backwards compatibility.
  File "C:\Users\admin\AppData\Local\Programs\Python\Python310\lib\site-packages\torch\utils\data\_utils\collate.py", line 143, in <listcomp>
    return [collate(samples, collate_fn_map=collate_fn_map) for samples in transposed]  # Backwards compatibility.
  File "C:\Users\admin\AppData\Local\Programs\Python\Python310\lib\site-packages\torch\utils\data\_utils\collate.py", line 120, in collate
    return collate_fn_map[elem_type](batch, collate_fn_map=collate_fn_map)
  File "C:\Users\admin\AppData\Local\Programs\Python\Python310\lib\site-packages\torch\utils\data\_utils\collate.py", line 163, in collate_tensor_fn
    return torch.stack(batch, 0, out=out)
KeyboardInterrupt